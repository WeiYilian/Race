Index: Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEngine.EventSystems;\r\n\r\npublic class InFaceRotation : MonoBehaviour, IBeginDragHandler, IDragHandler,IEndDragHandler\r\n{\r\n    // 存储五行小元素的列表\r\n    public List<RectTransform> WuXing = new List<RectTransform>();\r\n    \r\n    public Queue<string> wuxingQueue = new Queue<string>();\r\n\r\n    private Vector2 ModelPos;\r\n    //当前鼠标位置\r\n    private Vector2 mousePos;\r\n    //上一帧鼠标位置\r\n    private Vector2 premousePos;\r\n    private float RotateAngle;\r\n    private Quaternion q; \r\n    //模型欧拉角存储变量\r\n    private Vector3 localEluer;\r\n    // 旋转速度\r\n    public float rotSpeed;\r\n    // 内盘上每个端点相距的角度\r\n    private int distanceAngle;\r\n    // 上次更新的点位\r\n    private int point = 0;\r\n    \r\n\r\n    //控件所在画布\r\n    private RectTransform canvasRec;\r\n\r\n    private void Start()\r\n    {\r\n        canvasRec = UIFaceManager.Instance.UIFaceList[2].GetComponent<RectTransform>();\r\n        distanceAngle = 360 / 5;\r\n        for (int i = 0; i < WuXing.Count; i++)\r\n        {\r\n            wuxingQueue.Enqueue(WuXing[i].name);\r\n        }\r\n    }\r\n\r\n    public void OnBeginDrag(PointerEventData eventData)\r\n    {\r\n        // 获得当前点击的摄像机\r\n        Camera camera = eventData.pressEventCamera;\r\n        //ModelPos = Camera.main.WorldToScreenPoint(transform.position);\r\n        RectTransformUtility.ScreenPointToLocalPointInRectangle(canvasRec, eventData.position,camera , out ModelPos);\r\n        // 将屏幕空间鼠标位置eventData.position转换为鼠标在画布空间的鼠标位置\r\n        RectTransformUtility.ScreenPointToLocalPointInRectangle(canvasRec, eventData.position,camera , out mousePos);\r\n        //每次重新点击的时候都重置鼠标上一帧点击坐标\r\n        premousePos = mousePos;\r\n    }\r\n\r\n    public void OnDrag(PointerEventData eventData)\r\n    {\r\n        Camera camera = eventData.pressEventCamera;\r\n        // 将屏幕空间鼠标位置eventData.position转换为鼠标在画布空间的鼠标位置\r\n        RectTransformUtility.ScreenPointToLocalPointInRectangle(canvasRec, eventData.position, camera, out mousePos);\r\n        //获取旋转角度\r\n        RotateAngle = Vector2.Angle(premousePos - ModelPos, mousePos - ModelPos);\r\n        \r\n        if (RotateAngle == 0)\r\n        {\r\n            premousePos = mousePos;\r\n        }\r\n        else\r\n        {\r\n            //创建从上一角度到现在角度的旋转四元数\r\n            q = Quaternion.FromToRotation(premousePos - ModelPos, mousePos - ModelPos);\r\n            //判断顺时针旋转或者逆时针旋转\r\n            float k = q.z > 0 ? 1 : -1;\r\n            //存储欧拉角\r\n            localEluer.z += k * RotateAngle * rotSpeed;\r\n            //进行旋转\r\n            transform.localEulerAngles = localEluer;\r\n            for (int i = 0; i < WuXing.Count; i++)\r\n            {\r\n                //对五个小元素进行反方向旋转，以保证小元素不旋转\r\n                WuXing[i].transform.localEulerAngles = -localEluer;\r\n            }\r\n            premousePos = mousePos;\r\n        }\r\n    }\r\n\r\n    public void OnEndDrag(PointerEventData eventData)\r\n    {\r\n        // 获取自身欧拉角的z值\r\n        var transformRotation = transform.GetComponent<RectTransform>().rotation.eulerAngles.z;\r\n        //  若与点位的值小于10则吸附至点位\r\n        if (Mathf.Abs(transformRotation) % distanceAngle < 10 || Mathf.Abs(transformRotation) % distanceAngle > distanceAngle-10)\r\n        {\r\n            transform.localEulerAngles = new Vector3(0,0,GetAngles(transformRotation));\r\n            for (int i = 0; i < WuXing.Count; i++)\r\n            {\r\n                //对五个小元素进行反方向定位，以保证小元素不旋转\r\n                WuXing[i].transform.localEulerAngles = new Vector3(0,0,-GetAngles(transformRotation));\r\n            }\r\n            AudioManager.Instance.PlayButtonAudio();\r\n            UpdataQuene(GetAngles(transformRotation));\r\n        }\r\n        \r\n        UIFaceManager.Instance.GetTwoFaceManager().MatchJudgment();\r\n    }\r\n    \r\n    /// <summary>\r\n    /// 计算角度值是否位于端点附近\r\n    /// </summary>\r\n    private int GetAngles(float angles)\r\n    {\r\n        int a = 0;\r\n        int boundary = distanceAngle / 2;\r\n        //若余数未超过35度则取余，若余数超过35度则用70度减去余数\r\n        if (angles % distanceAngle > boundary)\r\n            a = (int) (angles / distanceAngle) + 1;\r\n        else if(angles%distanceAngle <= boundary)\r\n            a = (int) (angles / distanceAngle);\r\n\r\n        return a * distanceAngle;\r\n    }\r\n    \r\n    /// <summary>\r\n    /// 更新队列\r\n    /// 金对应肺，木对应肝，水对应肾，火对应心，土对应脾\r\n    /// </summary>\r\n    private void UpdataQuene(int angles)\r\n    {\r\n        int i = angles / distanceAngle;\r\n        //当圆盘转一圈回来时\r\n        if (angles == 0)\r\n            i = 5;\r\n        // 更新五行队列顺序\r\n        for (int j = 0; j < 5-(i-point); j++)\r\n        {\r\n            string obj = wuxingQueue.Dequeue();\r\n            wuxingQueue.Enqueue(obj);\r\n        }\r\n        point = i;\r\n\r\n        // foreach (string s in wuxingQueue)\r\n        // {\r\n        //     Debug.Log(\"五行名：\"+s);\r\n        // }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs	(date 1682332560568)
@@ -97,7 +97,7 @@
                 //对五个小元素进行反方向定位，以保证小元素不旋转
                 WuXing[i].transform.localEulerAngles = new Vector3(0,0,-GetAngles(transformRotation));
             }
-            AudioManager.Instance.PlayButtonAudio();
+            // TODO:AudioManager.Instance.PlayButtonAudio();
             UpdataQuene(GetAngles(transformRotation));
         }
         
Index: Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing UnityEngine;\r\nusing UnityEngine.UI;\r\nusing Random = UnityEngine.Random;\r\nusing DG.Tweening;\r\n\r\npublic class AnswerManager : MonoBehaviour\r\n{\r\n    //问题类型\r\n    public ProblemType ProblemType;\r\n    //选择问题字典  问题答案以及干扰选项列表,首位为问题,第二位为正确答案\r\n    private List<List<string>> SelectAnswerList = new List<List<string>>();\r\n    //填空问题字典  问题答案以及干扰选项列表,首位为问题,第二位为正确答案\r\n    private List<List<string>> FillVacancyAnswerList = new List<List<string>>();\r\n    //选择的问题序号\r\n    private int rod;\r\n\r\n    // 问题\r\n    private Text Question;\r\n    // 填空题\r\n    private List<Button> AnswerArea = new List<Button>();\r\n    private List<Text> ShowAnswerArea_Text;\r\n    private List<Button> SelAnswerArea_Btn;\r\n    private List<Text> SelAnswerArea_Text;\r\n    private int selectSum = 0;//已选择字的数量\r\n    // 选择题\r\n    private List<Button> Options_Btn;\r\n    private List<Text> Options_Text;\r\n    private Text OptionAnswer;\r\n\r\n    private void Awake()\r\n    {\r\n        Init();\r\n    }\r\n\r\n    //初始化\r\n    private void Init()\r\n    {\r\n        #region 组件初始化\r\n                \r\n        //两种问题通用的查找\r\n        Question = transform.Find(\"Question\").GetComponent<Text>();\r\n        switch (ProblemType)\r\n        {\r\n            case ProblemType.ShortAnswer:\r\n                //选择题\r\n                GetAnswer(transform.Find(\"Options\"),ref Options_Text,true);\r\n                GetAnswer(transform.Find(\"Options\"),ref Options_Btn);\r\n                Options_Btn.Add(transform.Find(\"ConfirmBtn\").GetComponent<Button>());\r\n                break;\r\n            case ProblemType.FillVacancy:\r\n                //填空题\r\n                GetAnswer(transform.Find(\"Answers\"),ref ShowAnswerArea_Text,true);\r\n                GetAnswer(transform.Find(\"AnswerSelect\"),ref SelAnswerArea_Btn);\r\n                GetAnswer(transform.Find(\"AnswerSelect\"),ref SelAnswerArea_Text,true);\r\n                SelAnswerArea_Btn.Add(transform.Find(\"ClearBtn\").GetComponent<Button>());\r\n                break;\r\n            default:\r\n                throw new ArgumentOutOfRangeException();\r\n        }\r\n        \r\n        #endregion\r\n\r\n        #region 问题初始化\r\n\r\n        #region 选择题初始化\r\n\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"我国第一部药典是（ ）\",\"《神农本草经》\",\"《新修本草》\",\"《神农本草经》\",\"《证类本草》\",\"《中药大辞典》\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"《伤寒杂病论》的作者是（ ）\",\"张仲景\",\"张仲景\",\"扁鹊\",\"华佗\",\"李时珍\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"五位是指药物的（ ）\",\"最基本滋味\",\"五种作用\",\"部份味道\",\"最基本滋味\",\"全部味道\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"华佗、张仲景、（ ）被并称为“建安三神医”\",\"董奉\",\"李东垣\",\"董奉\",\"扁鹊\",\"杨继洲\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"在五行生克关系中，下列错误的是（ ）\",\"水克木\",\"木克土\",\"火生土\",\"金生水\",\"水克木\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"《铜人腧穴针灸图经》的作者是（ ）\",\"王惟一\",\"万密斋\",\"皇甫谧\",\"王惟一\",\"李东垣\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"国内首先进行现代药理研究的中药是（ ）\",\"麻黄\",\"黄连\",\"黄芩\",\"麻黄\",\"人参\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"以下中医著作为钱乙所著的是（ ）\",\"《《小儿药证直诀》》\",\"《温疫论》\",\"《小儿药证直诀》\",\"《温热论》\",\"《脾胃论》\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"下列著作为孙思邈所作的是（ ）\",\"《千金要方》\",\"《脾胃论》\",\"《本草纲目》\",\"《食疗本草》\",\"《千金要方》\"\r\n        });\r\n        SelectAnswerList.Add(new List<string>()\r\n        {\r\n            \"下列被称为“医圣”的是（ ）\",\"张仲景\",\"扁鹊\",\"李时珍\",\"华佗\",\"张仲景\"\r\n        });\r\n\r\n        #endregion\r\n        \r\n        #region 填空题初始化\r\n\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"无阴则阳无以生，无阳则阴无以化，体现了_____\",\"阴阳互根\",\"交\",\"阴\",\"长\",\"互\",\"阳\",\"感\",\"用\",\"根\",\"消\",\"力\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"肺主一身之气取决于肺的____\",\"呼吸功能\",\"吸\",\"脉\",\"气\",\"宣\",\"功\",\"生\",\"百\",\"呼\",\"能\",\"朝\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"根据五行学说推断，____可作为心病的诊断依据\",\"面见赤色\",\"耳\",\"赤\",\"急\",\"甜\",\"见\",\"槁\",\"面\",\"易\",\"燥\",\"色\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"中医学的基本特点是____和辨证论治\",\"整体观念\",\"念\",\"谐\",\"体\",\"和\",\"木\",\"观\",\"益\",\"补\",\"整\",\"论\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"五行中土的特性是\",\"长养化育\",\"育\",\"净\",\"炎\",\"柔\",\"化\",\"发\",\"清\",\"养\",\"杀\",\"长\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"五脏的共同生理特点是化生和____\",\"贮藏精气\",\"化\",\"气\",\"内\",\"贮\",\"和\",\"温\",\"藏\",\"脏\",\"热\",\"精\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"脉象有力是指____\",\"柔和有力\",\"力\",\"沉\",\"取\",\"有\",\"柔\",\"从\",\"不\",\"容\",\"和\",\"缓\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"“春养脾气；夏养肺气；秋养肝气；冬养心气”出自：《____》\",\"食疗本草\",\"经\",\"草\",\"乙\",\"灸\",\"本\",\"腧\",\"甲\",\"疗\",\"针\",\"食\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"“安谷则昌，绝谷则亡。”出自：《____》\",\"本草纲目\",\"伤\",\"纲\",\"草\",\"病\",\"寒\",\"目\",\"杂\",\"论\",\"疗\",\"本\"\r\n        });\r\n        FillVacancyAnswerList.Add(new List<string>()\r\n        {\r\n            \"“上医医国，中医医人，下医医病。”出自：《____》\",\"千金要方\",\"草\",\"要\",\"本\",\"目\",\"金\",\"千\",\"难\",\"纲\",\"经\",\"方\"\r\n        });\r\n\r\n        #endregion\r\n\r\n        #endregion\r\n    }\r\n    \r\n\r\n    private void Start()\r\n    {\r\n        InitBtn();\r\n    }\r\n\r\n    private void OnEnable()\r\n    {\r\n        SpawnAnswer();\r\n    }\r\n\r\n    private void InitBtn()\r\n    {\r\n        transform.parent.Find(\"AnswerPanel/关闭\").GetComponent<Button>().onClick.AddListener(() =>//关闭面板\r\n        {\r\n            switch (ProblemType)\r\n            {\r\n                case ProblemType.ShortAnswer:\r\n                    if (Options_Btn[0].enabled == false)\r\n                    {\r\n                        BtnStateSwitch(Options_Btn);\r\n                        foreach (Text item in Options_Text)\r\n                        {\r\n                            item.color = Color.black;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ProblemType.FillVacancy:\r\n                    if(SelAnswerArea_Btn[0].enabled == false)\r\n                    {\r\n                        BtnStateSwitch(SelAnswerArea_Btn);\r\n                        foreach (Text item in SelAnswerArea_Text)\r\n                        {\r\n                            item.color = Color.black;\r\n                        }\r\n                        foreach (Text item in ShowAnswerArea_Text)\r\n                        {\r\n                            item.color = Color.black;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new ArgumentOutOfRangeException();\r\n            }\r\n\r\n            transform.parent.gameObject.SetActive(false);\r\n        });\r\n        switch (ProblemType)\r\n        {\r\n            case ProblemType.ShortAnswer:\r\n                BtnDelegate(Options_Btn[0]);\r\n                BtnDelegate(Options_Btn[1]);\r\n                BtnDelegate(Options_Btn[2]);\r\n                BtnDelegate(Options_Btn[3]);\r\n                Options_Btn[4].onClick.AddListener(() =>\r\n                {\r\n                    if (OptionAnswer == null)\r\n                    {\r\n                        UIFaceManager.Instance.MessageonCtrol(\"请选择选项！\");\r\n                        return;\r\n                    }\r\n                    \r\n                    if (SelectAnswerList[rod][1] == OptionAnswer.text)\r\n                    {\r\n                        //回答正确\r\n                        UIFaceManager.Instance.MessageonCtrol(\"回答正确\");\r\n                        OptionAnswer.DOColor(Color.green, 0.5f);\r\n                        SelectAnswerList.RemoveAt(rod);\r\n                        UIFaceManager.Instance.GetTwoFaceManager().FInishTwoFace();\r\n                    }\r\n                    else\r\n                    {\r\n                        //回答错误\r\n                        UIFaceManager.Instance.MessageonCtrol(\"回答错误\");\r\n                        OptionAnswer.DOColor(Color.red, 0.5f);\r\n                        foreach (Text item in Options_Text)\r\n                        {\r\n                            if(item.text == SelectAnswerList[rod][1])\r\n                                item.DOColor(Color.green, 0.5f);\r\n                        }\r\n                    }\r\n                    \r\n                    BtnStateSwitch(Options_Btn);\r\n                    OptionAnswer = null;\r\n                });\r\n                break;\r\n            case ProblemType.FillVacancy:\r\n                BtnDelegate(SelAnswerArea_Btn[0],false);\r\n                BtnDelegate(SelAnswerArea_Btn[1],false);\r\n                BtnDelegate(SelAnswerArea_Btn[2],false);\r\n                BtnDelegate(SelAnswerArea_Btn[3],false);\r\n                BtnDelegate(SelAnswerArea_Btn[4],false);\r\n                BtnDelegate(SelAnswerArea_Btn[5],false);\r\n                BtnDelegate(SelAnswerArea_Btn[6],false);\r\n                BtnDelegate(SelAnswerArea_Btn[7],false);\r\n                BtnDelegate(SelAnswerArea_Btn[8],false);\r\n                BtnDelegate(SelAnswerArea_Btn[9],false);\r\n                SelAnswerArea_Btn[10].onClick.AddListener(() =>\r\n                {\r\n                    selectSum = 0;\r\n                    foreach (Text text in ShowAnswerArea_Text)\r\n                    {\r\n                        text.DOFade(0, 1);\r\n                    }\r\n                });\r\n                \r\n                break;\r\n            default:\r\n                throw new ArgumentOutOfRangeException();\r\n        }\r\n    }\r\n\r\n    private void BtnDelegate(Button button,bool isShortAnswer = true)\r\n    {\r\n        AudioManager.Instance.PlayButtonAudio();\r\n        if (isShortAnswer)\r\n        {\r\n            button.onClick.AddListener(() =>\r\n            {\r\n                if(OptionAnswer != null)\r\n                    OptionAnswer.GetComponent<Text>().color = Color.black;\r\n                OptionAnswer = button.transform.GetChild(0).GetComponent<Text>();\r\n                OptionAnswer.GetComponent<Text>().color = Color.blue;\r\n            });\r\n        }\r\n        else\r\n        {\r\n            button.onClick.AddListener(() =>\r\n            {\r\n                foreach (var item in ShowAnswerArea_Text)\r\n                {\r\n                    if (item.GetComponent<Text>().color.a <= 100f)\r\n                    {\r\n                        item.text = \"\";\r\n                        item.GetComponent<Text>().color = new Color(0,0,0,255);\r\n                    }\r\n                        \r\n                }\r\n                \r\n                if (selectSum < ShowAnswerArea_Text.Count - 1)\r\n                {\r\n                    AnswerArea.Add(button.GetComponent<Button>());\r\n                    ShowAnswerArea_Text[selectSum].text = button.transform.GetChild(0).GetComponent<Text>().text;\r\n                    selectSum++;\r\n                }\r\n                else\r\n                {\r\n                    AnswerArea.Add(button.GetComponent<Button>());\r\n                    ShowAnswerArea_Text[selectSum].text = button.transform.GetChild(0).GetComponent<Text>().text;//最后一次点击也要存储\r\n                    \r\n                    //将字符串拼接起来\r\n                    StringBuilder selectText = new StringBuilder();\r\n                    foreach (Text text in ShowAnswerArea_Text)\r\n                    {\r\n                        selectText.Append(text.text);//将字符串拼接起来\r\n                    }\r\n                    \r\n                    if (FillVacancyAnswerList[rod][1] == selectText.ToString())\r\n                    {\r\n                        UIFaceManager.Instance.MessageonCtrol(\"回答正确\");\r\n                        foreach (Button item in AnswerArea)\r\n                        {\r\n                            item.transform.Find(\"Text\").GetComponent<Text>().DOColor(Color.green, 0.5f);\r\n                        }\r\n                        \r\n                        foreach (Text item in ShowAnswerArea_Text)\r\n                        {\r\n                            item.GetComponent<Text>().DOColor(Color.green, 0.5f);\r\n                        }\r\n\r\n                        BtnStateSwitch(SelAnswerArea_Btn);\r\n                        FillVacancyAnswerList.RemoveAt(rod);\r\n                        UIFaceManager.Instance.GetTwoFaceManager().FInishTwoFace();\r\n                    }\r\n                    else\r\n                    {\r\n                        UIFaceManager.Instance.MessageonCtrol(\"回答错误\");\r\n                        foreach (Text text in ShowAnswerArea_Text)\r\n                        {\r\n                            text.DOFade(0, 1);\r\n                        }\r\n                        \r\n                        foreach (Button item in AnswerArea)\r\n                        {\r\n                            item.transform.Find(\"Text\").GetComponent<Text>().color = Color.red;\r\n                            item.transform.Find(\"Text\").GetComponent<Text>().DOColor(Color.black, 1f);\r\n                        }\r\n                        AnswerArea.Clear();\r\n                    }\r\n                    selectSum = 0;\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private void BtnStateSwitch(List<Button> buttons)\r\n    {\r\n        foreach (Button item in buttons)\r\n        {\r\n            item.GetComponent<Button>().enabled = !item.GetComponent<Button>().enabled;\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 遍历子物体并获取Text组件\r\n    /// </summary>\r\n    private void GetAnswer<T>(Transform parentObj,ref List<T> list,bool isChildComponent = false)\r\n    {\r\n        list = new List<T>();\r\n        if (isChildComponent)\r\n        {\r\n            foreach (Transform child in parentObj)\r\n            {\r\n                list.Add(child.GetChild(0).GetComponent<T>());\r\n            }\r\n        }\r\n        else\r\n        {\r\n            foreach (Transform child in parentObj)\r\n            {\r\n                list.Add(child.GetComponent<T>());\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /// <summary>\r\n    /// 初始化问题\r\n    /// 问题答案以及干扰选项列表,首位为问题，第二位为正确答案，其余的均为干扰选项\r\n    /// </summary>\r\n    public void SpawnAnswer()\r\n    {\r\n        // 初始化数据\r\n        OptionAnswer = null;\r\n        AnswerArea.Clear();\r\n\r\n        switch (ProblemType)\r\n        {\r\n            case ProblemType.ShortAnswer:\r\n                //选择题\r\n                rod = Random.Range(0, SelectAnswerList.Count);\r\n                if (SelectAnswerList[rod] != null)\r\n                {\r\n                    List<string> questions = SelectAnswerList[rod];\r\n                    Question.text = questions[0];//问题初始化\r\n                    for (int i = 0; i < Options_Text.Count; i++)\r\n                    {\r\n                        Options_Text[i].text = questions[i + 2];\r\n                    }\r\n                }\r\n                break;\r\n            case ProblemType.FillVacancy:\r\n                //填空题\r\n                rod = Random.Range(0, FillVacancyAnswerList.Count);\r\n                if (FillVacancyAnswerList[rod] != null)\r\n                {\r\n                    List<string> questions = FillVacancyAnswerList[rod];\r\n                    Question.text = questions[0];//问题初始化\r\n                    for (int i = 0; i < SelAnswerArea_Text.Count; i++)\r\n                    {\r\n                        SelAnswerArea_Text[i].text = questions[i + 2];\r\n                    }\r\n                    \r\n                    foreach (var text in ShowAnswerArea_Text)\r\n                    {\r\n                        text.text = \"\";\r\n                    }\r\n\r\n                    foreach (var text in ShowAnswerArea_Text)\r\n                    {\r\n                        text.text = \"\";\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new ArgumentOutOfRangeException();\r\n        }\r\n        \r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs	(date 1682332560591)
@@ -272,7 +272,7 @@
 
     private void BtnDelegate(Button button,bool isShortAnswer = true)
     {
-        AudioManager.Instance.PlayButtonAudio();
+        // TODO:AudioManager.Instance.PlayButtonAudio();
         if (isShortAnswer)
         {
             button.onClick.AddListener(() =>
Index: Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using UnityEngine;\r\nusing UnityEngine.EventSystems;\r\nusing UnityEngine.UI;\r\n\r\n\r\npublic class TowFaceViscera : UIDrag\r\n{\r\n    // 第二个面管理者\r\n    private TwoFaceManager twoFaceManager;\r\n    // 当前的脏腑对应的Viscera\r\n    private Viscera currentViscera;\r\n    // 问题的UI物体\r\n    private GameObject Answerbg;\r\n    \r\n\r\n    // 针对第二面的所需图片特性进行吸附功能重写\r\n    public override void Adsorption(PointerEventData eventData)\r\n    {\r\n        if (!AdsorptionFunction) return;\r\n        GameObject go = eventData.pointerCurrentRaycast.gameObject;\r\n        if (go.name != \"内圆盘\")\r\n            transform.SetParent(go.transform);\r\n        if (eventData.pointerCurrentRaycast.gameObject.CompareTag(\"VisceralPits\"))\r\n        {\r\n            if (Mathf.Sqrt((transform.position - go.transform.position).magnitude) < adsorptionRange)\r\n            {\r\n                twoFaceManager.JoinVisDesDic(go, transform.parent.gameObject,currentViscera);\r\n                transform.SetParent(go.transform);\r\n                transform.position = go.transform.position;\r\n                twoFaceManager.MatchJudgment();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 初始化\r\n    public override void TwoFaceButInit()\r\n    {\r\n        // 获取TwoFaceManager的对象\r\n        twoFaceManager = UIFaceManager.Instance.GetTwoFaceManager();\r\n        //  获得Viscera\r\n        currentViscera = twoFaceManager.GetViscera(transform.name);\r\n        // 获取答题面板\r\n        Answerbg = GameObject.Find(\"Canvas\").transform.Find(\"Answerbg\").gameObject;\r\n        //  判断问题类型\r\n        int i = Random.Range(1, 3);\r\n        if (i == 1)\r\n            currentViscera.ProblemType = ProblemType.ShortAnswer;\r\n        else if(i ==2)\r\n            currentViscera.ProblemType = ProblemType.FillVacancy;\r\n        \r\n\r\n\r\n        #region 问题按钮初始化\r\n\r\n        // 点击后触发答题环节\r\n        GetComponent<Button>().onClick.AddListener(() =>\r\n        {\r\n            AudioManager.Instance.PlayButtonAudio();\r\n            if (!twoFaceManager.Matching || currentViscera.AnswerOver) return;\r\n\r\n            twoFaceManager.CurAnsViscera = currentViscera;\r\n            \r\n            Answerbg.gameObject.SetActive(true);\r\n            GameObject shortAnswerObj = Answerbg.transform.Find(\"ShortAnswer\").gameObject;\r\n            GameObject fillVacancyObj = Answerbg.transform.Find(\"FillVacancy\").gameObject;\r\n            //Debug.Log(transform.name+\"类型是：\"+problemType+\"进入答题环节\");\r\n            switch (currentViscera.ProblemType)\r\n            { \r\n                // 触发简答题模式\r\n                case ProblemType.ShortAnswer:\r\n                    shortAnswerObj.SetActive(true);\r\n                    fillVacancyObj.SetActive(false);\r\n                    break;\r\n                // 触发填空题模式\r\n                case ProblemType.FillVacancy:\r\n                    shortAnswerObj.SetActive(false);\r\n                    fillVacancyObj.SetActive(true);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        #endregion\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs	(date 1682332560607)
@@ -41,23 +41,23 @@
         currentViscera = twoFaceManager.GetViscera(transform.name);
         // 获取答题面板
         Answerbg = GameObject.Find("Canvas").transform.Find("Answerbg").gameObject;
-        //  判断问题类型
-        int i = Random.Range(1, 3);
-        if (i == 1)
-            currentViscera.ProblemType = ProblemType.ShortAnswer;
-        else if(i ==2)
-            currentViscera.ProblemType = ProblemType.FillVacancy;
-        
-
-
-        #region 问题按钮初始化
-
-        // 点击后触发答题环节
-        GetComponent<Button>().onClick.AddListener(() =>
-        {
-            AudioManager.Instance.PlayButtonAudio();
-            if (!twoFaceManager.Matching || currentViscera.AnswerOver) return;
-
+
+        #region 问题按钮初始化
+
+        // 点击后触发答题环节
+        GetComponent<Button>().onClick.AddListener(() =>
+        {
+            // TODO:AudioManager.Instance.PlayButtonAudio();
+            if (!twoFaceManager.Matching || currentViscera.AnswerOver) return;
+
+            //  判断问题类型
+            int i = Random.Range(1, 3);
+            if (i == 1)
+                currentViscera.ProblemType = ProblemType.ShortAnswer;
+            else if(i ==2)
+                currentViscera.ProblemType = ProblemType.FillVacancy;
+            
+            
             twoFaceManager.CurAnsViscera = currentViscera;
             
             Answerbg.gameObject.SetActive(true);
Index: Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing DG.Tweening;\r\nusing UnityEngine;\r\nusing UnityEngine.EventSystems;\r\nusing UnityEngine.UI;\r\n\r\npublic enum PuzzleType\r\n{\r\n    OneJigsawPuzzle,\r\n    TwoJigsawPuzzle\r\n}\r\n\r\npublic enum PuzzleState\r\n{\r\n    Small,\r\n    Big,\r\n    NotVariable\r\n}\r\n\r\npublic class Puzzle : MonoBehaviour, IPointerClickHandler\r\n{\r\n    private RectTransform m_rectTransform;\r\n\r\n    private CanvasGroup maskCanGro;\r\n    \r\n    // 判断是否可以进行大拼图切换\r\n    public bool exchangePuzzle;\r\n    // 拼图需要达到的目标位置索引\r\n    public int jpTargetIndex;\r\n    // 判断是否可以拼图尺寸是否可变化\r\n    public PuzzleState PuzzleState;\r\n    // 拼图的类型\r\n    public PuzzleType PuzzleType;\r\n    // 当前位置编号\r\n    public int jpCurIndex;\r\n    // 判断是否拼图成功\r\n    private bool isSucceed;\r\n    // 上一次点击时间\r\n    private float lastClickTime;\r\n    // 两次点击之间的最大时间间隔\r\n    private float clickInterval;\r\n    \r\n    public bool flashing;\r\n    //记录原来信息，方便回退\r\n    [HideInInspector] public Vector3 originalPos;\r\n    [HideInInspector] public Vector2 originalSize;\r\n    [HideInInspector] public GameObject ParentObj;\r\n\r\n    private List<Transform> TraList = new List<Transform>();\r\n    \r\n    // OneFaceManager\r\n    private OneFaceManager oneFaceManager;\r\n\r\n    private void Awake()\r\n    {\r\n        m_rectTransform = transform.GetComponent<RectTransform>();\r\n    }\r\n\r\n    private void Start()\r\n    {\r\n        Init();\r\n    }\r\n\r\n    // 初始化\r\n    private void Init()\r\n    {\r\n        // 获取OneFaceManager\r\n        oneFaceManager = UIFaceManager.Instance.GetOneFaceManager();\r\n        // 将自身加进字典中\r\n        oneFaceManager.PuzzleDic[jpCurIndex] = this;\r\n        // 初始化时间间隔\r\n        clickInterval = 0.3f;\r\n    }\r\n\r\n    private bool isDisPlay;\r\n    private void Update()\r\n    {\r\n        if(flashing)\r\n        {\r\n            if (!isDisPlay)\r\n            {\r\n                maskCanGro.alpha = Mathf.Lerp(maskCanGro.alpha, 1, 0.02f);\r\n                if(maskCanGro.alpha >= 0.9f)\r\n                    isDisPlay = !isDisPlay;\r\n            }\r\n                \r\n            if (isDisPlay)\r\n            {\r\n                maskCanGro.alpha = Mathf.Lerp(maskCanGro.alpha, 0, 0.02f);\r\n                if(maskCanGro.alpha <= 0.1f)\r\n                    isDisPlay = !isDisPlay;\r\n            }\r\n                \r\n        }\r\n    }\r\n\r\n\r\n    /// <summary>\r\n    /// 大拼图切换\r\n    /// </summary>\r\n    /// <param name=\"eventData\"></param>\r\n    private void ExchangeBigPuzzle(PointerEventData eventData)\r\n    {\r\n        if (!exchangePuzzle) return;\r\n        \r\n        if (!oneFaceManager.InitialObj)\r\n        {\r\n            // 如果未进行第一次点击，就记录第一次点击的物体\r\n            oneFaceManager.InitialObj = eventData.pointerCurrentRaycast.gameObject;\r\n            // 同时使第一个点击的物体触发点击特效\r\n            maskCanGro = oneFaceManager.Maskes[jpCurIndex - 1].GetComponent<CanvasGroup>();\r\n            flashing = true;\r\n        }\r\n        else\r\n        {\r\n            // 如果是双击则不触发交换位置方法和闪烁方法\r\n            Puzzle puzzle = oneFaceManager.InitialObj.GetComponent<Puzzle>();\r\n            if (Time.time - lastClickTime < clickInterval)\r\n            {\r\n                //停止闪烁\r\n                puzzle.flashing = false;\r\n                flashing = false;\r\n                oneFaceManager.Maskes[puzzle.jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;\r\n                return;\r\n            }\r\n            \r\n            // 存放第一次点击的物体位置\r\n            Vector3 firstPos = oneFaceManager.InitialObj.transform.position;\r\n            // 存放第二次点击的物体位置\r\n            Vector3 secondPos = eventData.pointerCurrentRaycast.gameObject.transform.position;\r\n            // 两个物体之间的位置切换\r\n            oneFaceManager.InitialObj.transform.position = secondPos;\r\n            secondPos = firstPos;\r\n            eventData.pointerCurrentRaycast.gameObject.transform.position = secondPos;\r\n            //停止闪烁\r\n            puzzle.flashing = false;\r\n            oneFaceManager.Maskes[puzzle.jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;\r\n            // 对Puzzle的属性进行交换\r\n            oneFaceManager.ExchangePuzzleCharacteristic(eventData.pointerCurrentRaycast.gameObject.GetComponent<Puzzle>());\r\n            // 切换完成，释放第一次点击后存储的对象\r\n            oneFaceManager.InitialObj = null;\r\n        }\r\n    }\r\n\r\n    \r\n    /// <summary>\r\n    /// 大小拼图切换\r\n    /// </summary>\r\n    private void ExchangeSmallPuzzle()\r\n    {\r\n        if (PuzzleState == PuzzleState.NotVariable) return;\r\n        // 判断两次点击时间是否超过clickInterval\r\n        if (Time.time - lastClickTime < clickInterval)\r\n        {\r\n            flashing = false;\r\n            oneFaceManager.Maskes[jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;\r\n            // 将第一次点击时存储的游戏物体释放掉\r\n            oneFaceManager.InitialObj = null;\r\n            switch (PuzzleState)\r\n            {\r\n                case PuzzleState.Small:\r\n                    VariableBig();\r\n                    break;\r\n                case PuzzleState.Big:\r\n                    VariableSmall();\r\n                    break;\r\n                case PuzzleState.NotVariable:\r\n                    break;\r\n                default:\r\n                    throw new ArgumentOutOfRangeException();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // 更新上一次点击的时间,记录点击时间\r\n            lastClickTime = Time.time;\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 放大的方法\r\n    /// </summary>\r\n    private void VariableBig()\r\n    {\r\n        // 记录父物体(大拼图)\r\n        ParentObj = transform.parent.gameObject;\r\n        // 记录初始信息\r\n        originalPos = transform.localPosition;\r\n        originalSize = m_rectTransform.sizeDelta;\r\n        // 将小拼图的相对位置设置在中心\r\n        transform.localPosition = Vector3.zero;\r\n        // 将小拼图变大\r\n        m_rectTransform.sizeDelta = ParentObj.GetComponent<RectTransform>().rect.size;\r\n        // 隐藏父物体\r\n        ParentObj.SetActive(false);\r\n        if (TraList.Count > 0)\r\n        {\r\n            // 遍历子物体，将子物体显示\r\n            foreach (Transform child in TraList)\r\n            {\r\n                child.gameObject.SetActive(true);\r\n            }\r\n            // 清空TraList\r\n            TraList.Clear();\r\n        }\r\n        // 改变父物体\r\n        transform.SetParent(ParentObj.transform.parent);\r\n        // 对Puzzle的属性进行交换\r\n        oneFaceManager.VariablePuzzleCharacteristic(this);\r\n        // 放大之后调整设置\r\n        SwitchState();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 缩小的方法\r\n    /// </summary>\r\n    private void VariableSmall()\r\n    {\r\n        // 显示父物体\r\n        ParentObj.SetActive(true);\r\n        // 设置父物体\r\n        transform.SetParent(ParentObj.transform);\r\n        // 遍历子物体，并将子物体隐藏\r\n        foreach (Transform child in transform)\r\n        {\r\n            TraList.Add(child);\r\n            child.gameObject.SetActive(false);\r\n        }\r\n        // 设置回原来的参数\r\n        transform.localPosition = originalPos;\r\n        m_rectTransform.sizeDelta = originalSize;\r\n        // 对Puzzle的属性进行交换\r\n        oneFaceManager.VariablePuzzleCharacteristic(this);\r\n        // 缩小之后调整设置\r\n        SwitchState();\r\n    }\r\n    \r\n    \r\n    // 点击事件\r\n    public void OnPointerClick(PointerEventData eventData)\r\n    {\r\n       // AudioManager.Instance.PlayButtonAudio();\r\n        // 拼图位置切换\r\n        ExchangeBigPuzzle(eventData);\r\n        // 拼图大小切换\r\n        ExchangeSmallPuzzle();\r\n    }\r\n\r\n    \r\n    /// <summary>\r\n    /// 拼图状态切换\r\n    /// </summary>\r\n    public void SwitchState()\r\n    {\r\n        switch (PuzzleState)\r\n        {\r\n            case PuzzleState.Small:\r\n                PuzzleState = PuzzleState.Big;\r\n                exchangePuzzle = true;\r\n                break;\r\n            case PuzzleState.Big:\r\n                PuzzleState = PuzzleState.Small;\r\n                exchangePuzzle = false;\r\n                break;\r\n            case PuzzleState.NotVariable:\r\n                exchangePuzzle = true;\r\n                break;\r\n            default:\r\n                throw new ArgumentOutOfRangeException();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs	(date 1682332560599)
@@ -114,16 +114,8 @@
         }
         else
         {
-            // 如果是双击则不触发交换位置方法和闪烁方法
-            Puzzle puzzle = oneFaceManager.InitialObj.GetComponent<Puzzle>();
-            if (Time.time - lastClickTime < clickInterval)
-            {
-                //停止闪烁
-                puzzle.flashing = false;
-                flashing = false;
-                oneFaceManager.Maskes[puzzle.jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;
+            if (!oneFaceManager.InitialObj)
                 return;
-            }
             
             // 存放第一次点击的物体位置
             Vector3 firstPos = oneFaceManager.InitialObj.transform.position;
@@ -134,8 +126,8 @@
             secondPos = firstPos;
             eventData.pointerCurrentRaycast.gameObject.transform.position = secondPos;
             //停止闪烁
-            puzzle.flashing = false;
-            oneFaceManager.Maskes[puzzle.jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;
+            oneFaceManager.InitialObj.GetComponent<Puzzle>().flashing = false;
+            oneFaceManager.Maskes[oneFaceManager.InitialObj.GetComponent<Puzzle>().jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;
             // 对Puzzle的属性进行交换
             oneFaceManager.ExchangePuzzleCharacteristic(eventData.pointerCurrentRaycast.gameObject.GetComponent<Puzzle>());
             // 切换完成，释放第一次点击后存储的对象
@@ -153,7 +145,12 @@
         // 判断两次点击时间是否超过clickInterval
         if (Time.time - lastClickTime < clickInterval)
         {
-            flashing = false;
+            if (oneFaceManager.InitialObj)
+            {
+                oneFaceManager.InitialObj.GetComponent<Puzzle>().flashing = false;
+                oneFaceManager.InitialObj = null;
+            }
+                
             oneFaceManager.Maskes[jpCurIndex - 1].GetComponent<CanvasGroup>().alpha = 0;
             // 将第一次点击时存储的游戏物体释放掉
             oneFaceManager.InitialObj = null;
@@ -194,15 +191,10 @@
         m_rectTransform.sizeDelta = ParentObj.GetComponent<RectTransform>().rect.size;
         // 隐藏父物体
         ParentObj.SetActive(false);
-        if (TraList.Count > 0)
-        {
-            // 遍历子物体，将子物体显示
-            foreach (Transform child in TraList)
-            {
-                child.gameObject.SetActive(true);
-            }
-            // 清空TraList
-            TraList.Clear();
+        // 遍历子物体，将子物体显示
+        foreach (Transform child in transform)
+        {
+            child.gameObject.SetActive(true);
         }
         // 改变父物体
         transform.SetParent(ParentObj.transform.parent);
@@ -224,7 +216,6 @@
         // 遍历子物体，并将子物体隐藏
         foreach (Transform child in transform)
         {
-            TraList.Add(child);
             child.gameObject.SetActive(false);
         }
         // 设置回原来的参数
@@ -240,7 +231,7 @@
     // 点击事件
     public void OnPointerClick(PointerEventData eventData)
     {
-       // AudioManager.Instance.PlayButtonAudio();
+        // TODO:AudioManager.Instance.PlayButtonAudio();
         // 拼图位置切换
         ExchangeBigPuzzle(eventData);
         // 拼图大小切换
Index: Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.Linq.Expressions;\r\nusing UnityEngine;\r\nusing System.Linq;\r\nusing DG.Tweening;\r\nusing UnityEngine.UI;\r\n\r\npublic class TwoFaceManager\r\n{\r\n    // viscera脏腑列表\r\n    public List<Viscera> VisceraList = new List<Viscera>();\r\n    // 存储innerDiscIFR\r\n    private InFaceRotation innerDiscIFR;\r\n    // 存储外圆盘\r\n    private GameObject outerDisc;\r\n    // 存储viscera目标位置\r\n    private Dictionary<string,string> visceraDesDic = new Dictionary<string,string>();\r\n    // 存储Viscera对应的密码表\r\n    private Dictionary<string, string> visceraCode = new Dictionary<string, string>();\r\n    // 判断是否全部匹配的bool值\r\n    public bool Matching;\r\n    //正在进行答题的元素\r\n    public Viscera CurAnsViscera;\r\n    //判断是否完成所有任务\r\n    public bool Accomplish;\r\n\r\n    public TwoFaceManager()\r\n    {\r\n        #region VisceraList初始化\r\n\r\n        // 初始化\r\n        VisceraList.Add(new Viscera() {Name = \"心\"});\r\n        VisceraList.Add(new Viscera() {Name = \"肝\"});\r\n        VisceraList.Add(new Viscera() {Name = \"脾\"});\r\n        VisceraList.Add(new Viscera() {Name = \"肺\"});\r\n        VisceraList.Add(new Viscera(){Name = \"肾\"});\r\n\r\n        #endregion\r\n\r\n        #region Viscera目的地列表初始化\r\n        // 获得innerDiscIFR\r\n        innerDiscIFR = UIFaceManager.Instance.UIFaceList[0].transform.Find(\"2/Panel/bg/内圆盘\").GetComponent<InFaceRotation>();\r\n        // 获取外圆盘\r\n        outerDisc = UIFaceManager.Instance.UIFaceList[0].transform.Find(\"2/Panel/bg/外圆盘\").gameObject;\r\n        // 初始化visceraDesList\r\n        foreach (Transform child in outerDisc.transform)\r\n        {\r\n            visceraDesDic.Add(child.name,null);\r\n        }\r\n\r\n        #endregion\r\n\r\n        #region Viscera对应的密码表初始化\r\n        \r\n        // 金对应肺，木对应肝，水对应肾，火对应心，土对应脾\r\n        visceraCode.Add(\"金\",\"肺\");\r\n        visceraCode.Add(\"木\",\"肝\");\r\n        visceraCode.Add(\"水\",\"肾\");\r\n        visceraCode.Add(\"火\",\"心\");\r\n        visceraCode.Add(\"土\",\"脾\");\r\n\r\n        #endregion\r\n    }\r\n\r\n    /// <summary>\r\n    /// 通过名字获得Viscera类\r\n    /// </summary>\r\n    /// <param name=\"name\">脏腑名字</param>\r\n    /// <returns></returns>\r\n    public Viscera GetViscera(string name)\r\n    {\r\n        //遍历viscera脏腑列表\r\n        foreach (Viscera viscera in VisceraList)\r\n        {\r\n            // 找到了则返回Viscera\r\n            if (name == viscera.Name)\r\n            {\r\n                return viscera;\r\n            }\r\n                \r\n        }\r\n        // 否则一律返回null\r\n        return null;\r\n    }\r\n\r\n    \r\n    /// <summary>\r\n    /// 判断是否可以排入VisceraDesDic字典中\r\n    /// </summary>\r\n    /// <param name=\"obj\">Viscera最后停留的物体</param>\r\n    /// <param name=\"olderperant\">Viscera的父物体</param>\r\n    /// <param name=\"curViscera\">当前的Viscera</param>\r\n    public void JoinVisDesDic(GameObject obj,GameObject olderperant,Viscera curViscera)\r\n    {\r\n        // 当Viscera离开Viscera目标位置的时候，字典清除Viscera的名字\r\n        if (visceraDesDic.ContainsKey(olderperant.name))\r\n            visceraDesDic[olderperant.name] = null;\r\n        // 当Viscera落在Viscera目标位置的时候，字典加入Viscera的名字\r\n        if(visceraDesDic.ContainsKey(obj.name))\r\n            visceraDesDic[obj.name] = curViscera.Name;\r\n    }\r\n    \r\n    \r\n    /// <summary>\r\n    /// 判断全部匹配\r\n    /// 金对应肺，木对应肝，水对应肾，火对应心，土对应脾\r\n    /// </summary>\r\n    public void MatchJudgment()\r\n    {\r\n        // 记录匹配了多少个脏腑与五行\r\n        int matchesNumber = 0;\r\n        int i = 0;\r\n        // 遍历五行队列\r\n        foreach (var wuXingName in innerDiscIFR.wuxingQueue)\r\n        {\r\n            //根据五行名获取密码表对应的Viscera名字\r\n            if (visceraCode.TryGetValue(wuXingName, out string visceraName))\r\n            {\r\n                \r\n                //Debug.Log(\"五脏名：\"+visceraDesDic.ElementAt(i).Value);\r\n                if (visceraDesDic.ElementAt(i).Value == visceraName)\r\n                    matchesNumber++;\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (matchesNumber >= visceraDesDic.Count)\r\n        {\r\n            Matching = true;\r\n            UIFaceManager.Instance.UIFaceList[2].transform.Find(\"Panel/bg/甘菊\").GetComponent<Image>().DOFade(1,1);\r\n            UIFaceManager.Instance.MessageonCtrol(\"匹配成功\");\r\n        }\r\n        else\r\n        {\r\n            Matching = false;\r\n        }\r\n    }\r\n    \r\n    \r\n    /// <summary>\r\n    /// 判断第二面答题是否完成\r\n    /// </summary>\r\n    public void FInishTwoFace()\r\n    {\r\n        CurAnsViscera.AnswerOver = true;\r\n        foreach (var viscera in VisceraList)\r\n        {\r\n            if (!viscera.AnswerOver)\r\n                return;\r\n        }\r\n\r\n        Accomplish = true;\r\n        UIFaceManager.Instance.GameOver();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs	(date 1682332560624)
@@ -25,6 +25,8 @@
     //判断是否完成所有任务
     public bool Accomplish;
 
+    private GameObject com;
+
     public TwoFaceManager()
     {
         #region VisceraList初始化
@@ -61,6 +63,8 @@
         visceraCode.Add("土","脾");
 
         #endregion
+
+        com = UIFaceManager.Instance.UIFaceList[2].transform.Find("Panel/bg/甘菊").gameObject;
     }
 
     /// <summary>
@@ -129,7 +133,7 @@
         if (matchesNumber >= visceraDesDic.Count)
         {
             Matching = true;
-            UIFaceManager.Instance.UIFaceList[2].transform.Find("Panel/bg/甘菊").GetComponent<Image>().DOFade(1,1);
+            com.GetComponent<Image>().DOFade(1,1);
             UIFaceManager.Instance.MessageonCtrol("匹配成功");
         }
         else
Index: Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class Flow : MonoBehaviour\r\n{\r\n    public GameObject flowanmition;//获取摄像机下面花\r\n    public bool bloom;//动画开关\r\n    private Animator animator;//动画组件\r\n    private GameObject flow;\r\n    public GameObject SeedMange;//种子模拟系统\r\n    public GameObject Flow2;//花洒\r\n    void Start()\r\n    {\r\n        //开花的动画和获取浇水\r\n        \r\n        animator = flowanmition.GetComponent<Animator>();\r\n        flow = flowanmition.transform.Find(\"flow\").gameObject;\r\n        \r\n    }\r\n\r\n\r\n    public void OnClic()\r\n    {\r\n        UIFaceManager.Instance.MessageonCtrol(\"寻找道具激活种子模拟\");\r\n    }\r\n    private void OnTriggerEnter2D(Collider2D collision)\r\n    {\r\n        if (collision.name == \"Flow\") //花洒\r\n        {\r\n            Debug.Log(\"ss\");\r\n            if (!bloom)\r\n            { Debug.Log(\"s\");\r\n                Destroy(Flow2);\r\n                // animator.Play(\"Bloom\");\r\n                flow.gameObject.SetActive(true);\r\n                Destroy(flow,4f);\r\n               \r\n                animator.SetBool(\"Bloom\", true);\r\n                bloom = true;\r\n                UIFaceManager.Instance.MessageonCtrol(\"种子模拟已激活\");\r\n                UIFaceManager.Instance.GetThreeFaceMange().SeedisGame = true;//传入已经激活\r\n                SeedMange.gameObject.SetActive(true);\r\n                Destroy(gameObject,10f);\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs	(date 1682332560632)
@@ -28,9 +28,8 @@
     {
         if (collision.name == "Flow") //花洒
         {
-            Debug.Log("ss");
             if (!bloom)
-            { Debug.Log("s");
+            { 
                 Destroy(Flow2);
                 // animator.Play("Bloom");
                 flow.gameObject.SetActive(true);
Index: Assets/Scripts/TestScript/BagConter.meta
===================================================================
--- Assets/Scripts/TestScript/BagConter.meta	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/TestScript/BagConter.meta	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
@@ -1,8 +0,0 @@
-fileFormatVersion: 2
-guid: 3eb6c3baed0aa8f40b062cb6b03e1a3a
-folderAsset: yes
-DefaultImporter:
-  externalObjects: {}
-  userData: 
-  assetBundleName: 
-  assetBundleVariant: 
Index: Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\nusing UnityEngine.Video;\r\nusing UnityEngine.UI;\r\n\r\npublic class SeedContel : MonoBehaviour\r\n{ public Sprite Updateimage;//种子激活图片\r\n    // Start is called before the first frame update\r\n    private GameObject TipPanel;//第三面提示面板\r\n    private GameObject SeedPanel;//种子提示面板\r\n    private GameObject SeedPlathPanel;//种子种植条件面板\r\n    private GameObject SeedendPanel;//种子种植条件面板\r\n   \r\n    public GameObject seedmanger;\r\n    private Image Seedimage;//种子图片\r\n   \r\n    private Image Tipeedimage;//提示板图片\r\n    private Image Tipeedimage1;//提示板图片\r\n    private Image Tipeedimage2;//提示板图片\r\n    private GameObject bg3;\r\n   \r\n    //这里的video_img我是用来放RawImage的，挂载脚本后将RawImage拖入即可\r\n    private GameObject video_img;\r\n\r\n    \r\n    private Text seedmangetext;//提示版信息\r\n    private Text seedmangetext2;//提示版信息\r\n    private Text nametext;//提示版名字\r\n    private Text nametext1;//提示版名字\r\n    private Text nametext2;//提示版名字\r\n    \r\n    private string Seedname;//种子名字\r\n//确定，返回按钮\r\n    private Button define;\r\n    private Button back;\r\n    //石否激活按钮\r\n     static  bool isGame;\r\n     static  bool isGame1;\r\n     static  bool isGame2;\r\n\r\n     private ThreeFaceMange ThreeFaceMange;\r\n    void Start()\r\n    {\r\n        ThreeFaceMange = UIFaceManager.Instance.GetThreeFaceMange();\r\n        \r\n        video_img=GameObject.Find(\"Box/3/Panel\").transform.Find(\"vidoiamge1\").gameObject;\r\n        bg3 = GameObject.Find(\"Box/3/Panel\").transform.Find(\"bg\").gameObject;\r\n        \r\n       TipPanel = GameObject.Find(\"Canvas\").transform.Find(\"TIP3\").gameObject;\r\n       SeedPanel = TipPanel.transform.Find(\"种子信息面板\").gameObject;\r\n       SeedPlathPanel = TipPanel.transform.Find(\"种植条件选择面板\").gameObject;\r\n     //种植结果信息\r\n       SeedendPanel = TipPanel.transform.Find(\"种子种植结果信息\").gameObject;\r\n       \r\n       Seedname = gameObject.name;\r\n       Seedimage = gameObject.transform.GetComponent<Image>();\r\n       \r\n       Tipeedimage = SeedPanel.transform.Find(\"seedimage\").GetComponent<Image>();\r\n       Tipeedimage1 = SeedPlathPanel.transform.Find(\"seedimage\").GetComponent<Image>();\r\n       Tipeedimage2 = SeedendPanel.transform.Find(\"seedimage\").GetComponent<Image>();\r\n       \r\n       nametext=SeedPanel.transform.Find(\"nameText/Text\").GetComponent<Text>();\r\n       nametext1=SeedPlathPanel.transform.Find(\"nameText/Text\").GetComponent<Text>();\r\n       nametext2=SeedendPanel.transform.Find(\"nameText/Text\").GetComponent<Text>();\r\n       \r\n       seedmangetext=SeedPanel.transform.Find(\"seedmanage/Text\").GetComponent<Text>();\r\n       seedmangetext2=SeedendPanel.transform.Find(\"seedmanage/Text\").GetComponent<Text>();\r\n       \r\n       define = SeedPanel.transform.Find(\"确定\").GetComponent<Button>();\r\n       back = SeedPanel.transform.Find(\"返回\").GetComponent<Button>();\r\n      \r\n       MyOnEnable();\r\n\r\n    }\r\n\r\n    // Update is called once per frame\r\n   \r\n\r\n    private void OnTriggerEnter2D(Collider2D collision)\r\n    {\r\n        //检测是否将各个种子找到\r\n        if (collision.name == Seedname)\r\n        {\r\n            Debug.Log(\"ss\");\r\n            gameObject.GetComponent<Image>().sprite =Updateimage;\r\n            if (Seedname==\"甘菊\")\r\n            {UIFaceManager.Instance.MessageonCtrol(\"甘菊已激活\");\r\n                SeedContel.isGame = true;\r\n                ThreeFaceMange.Seed1 = true;\r\n            }\r\n\r\n            if (Seedname == \"车前子\")\r\n            {  UIFaceManager.Instance.MessageonCtrol(\"车前子已激活\");\r\n                SeedContel.isGame2 = true;\r\n                ThreeFaceMange.Seed2 = true;\r\n            }\r\n            if (Seedname == \"凤仙花\")\r\n            { \r\n                UIFaceManager.Instance.MessageonCtrol(\"凤仙花已激活\");\r\n                SeedContel.isGame1 = true;\r\n                ThreeFaceMange.Seed3 = true;\r\n                \r\n            }\r\n\r\n            Destroy(collision.gameObject);//找到后销毁\r\n        }\r\n       \r\n    }\r\n//管理各个面板按钮\r\n    private void MyOnEnable()\r\n    {\r\n        //种子信息面板按钮管理\r\n        List<Button> SeedButtonList = new List<Button>();\r\n       SeedButtonList.AddRange(SeedPanel.GetComponentsInChildren<Button>());//添加整个列表元素到列表里面\r\n        foreach (Button button in SeedButtonList)\r\n        {\r\n            button.onClick.AddListener(() =>\r\n            {\r\n                seedButtonclik(button);\r\n\r\n            });\r\n        } \r\n        List<Button> SeedButtonList2 = new List<Button>();\r\n       SeedButtonList2.AddRange(SeedendPanel.GetComponentsInChildren<Button>());//添加整个列表元素到列表里面\r\n        foreach (Button button in SeedButtonList2)\r\n        {\r\n            button.onClick.AddListener(() =>\r\n            {\r\n                seedButtonclik(button);\r\n\r\n            });\r\n        }\r\n        List<Button> SeedButtonpalthList = new List<Button>();\r\n        SeedButtonpalthList.AddRange(SeedPlathPanel.GetComponentsInChildren<Button>());//添加整个列表元素到列表里面\r\n        foreach (Button button in SeedButtonpalthList)\r\n        {\r\n            button.onClick.AddListener(() =>\r\n            {\r\n                seedButtonclik(button);\r\n\r\n            });\r\n        }\r\n    }\r\n//点击种子弹出消息面板，是否激活和详细信息\r\n\r\n    #region 种子面板点击Button\r\n\r\n    public void OnCilk()\r\n    {\r\n       \r\n       \r\n        \r\n        if (isGame==false||isGame1==false||isGame2==false)\r\n        {\r\n            Debug.Log(\"2\");\r\n            TipPanel.SetActive(true);\r\n            SeedPanel.SetActive(true);\r\n            nametext.text = Seedname;\r\n            Tipeedimage.sprite = Seedimage.sprite;\r\n            switch (gameObject.name)\r\n            {\r\n                case \"甘菊\":\r\n                    \r\n                    seedmangetext.text = \"【甘菊】\\n \\n<color=#FF0000>具体种植信息未激活，请找到对应种子拖入激活具体信息</color>\\n  \\n是否直接进入模拟种植点击确定\";\r\n                    UIFaceManager.Instance.MessageonCtrol(\"种子未激活\");\r\n                    break;\r\n                case\"凤仙花\":\r\n                    seedmangetext.text = \"【凤仙花】\\n \\n<color=#FF0000>具体种植信息未激活，请找到对应种子拖入激活具体信息</color>\\n \\n是否直接进入模拟种植点击确定\";\r\n                    UIFaceManager.Instance.MessageonCtrol(\"种子未激活\");\r\n                    \r\n                    break;\r\n                case \"车前子\": \r\n                    seedmangetext.text = \"【车前子】\\n \\n<color=#FF0000>具体种植信息未激活，请找到对应种子拖入激活具体信息</color>\\n  \\n是否直接进入模拟种植点击确定\";\r\n                    UIFaceManager.Instance.MessageonCtrol(\"种子未激活\");\r\n                    break;   \r\n                    \r\n            }\r\n        }\r\n\r\n        if (isGame == true)\r\n        {\r\n           \r\n            TipPanel.SetActive(true);\r\n            SeedPanel.SetActive(true);\r\n            nametext.text = Seedname;\r\n            Tipeedimage.sprite = Seedimage.sprite;\r\n            switch (gameObject.name)\r\n            {\r\n                case \"甘菊\":\r\n                    if (ThreeFaceMange.seedend1 == false)\r\n                    {\r\n                        seedmangetext.text = \"【甘菊】\\n \\n喜欢寒冷的环境,更适合<color=#A52A2A>秋播</color>。甘菊为二年生草花,秋季播种,<color=#A52A2A>发芽温度15-18度,开花到结种时需要充足的阳光,</color>\" +\r\n                                             \"良好的通风,排水良好的<color=#A52A2A>“沙壤土”</color>或土壤深厚的疏松壤土,抗寒性强\\n是否进入模拟系统\";\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                        seedmangetext.text = \"《食疗本草》中写道：其叶，正月采，可作羹；茎，五月五日采；花，九月九日采。〔证〕甘菊古代中国叫作春黄菊，稚子书传白菊开，西成相滞未容回。月明阶下窗纱薄，多少清香透入来。\\n菊不仅仅能入药更多依托的人们不畏艰难，顽强斗争，风霜高洁的品质，\\n 已种植完成继续模拟\";\r\n                    }\r\n                    break;\r\n                \r\n                    \r\n            }\r\n        }\r\n        if (isGame1 == true)\r\n        {\r\n            Debug.Log(\"1\");\r\n            TipPanel.SetActive(true);\r\n            SeedPanel.SetActive(true);\r\n            nametext.text = Seedname;\r\n            Tipeedimage.sprite = Seedimage.sprite;\r\n            switch (gameObject.name)\r\n            {\r\n                   \r\n                case\"凤仙花\":\r\n                    if (ThreeFaceMange.seedend3==false)\r\n                    {\r\n                        seedmangetext.text = \"【凤仙花】\\n \\n种植的季节以<color=#A52A2A>4月</color>播种最为适宜，凤仙花<color=#A52A2A>各期性喜阳光</color>，最适合生长的温度为<color=#A52A2A>20-26℃</color>,凤仙花适应能力强壤，可选用疏松肥沃、<color=#A52A2A>“富含腐殖质的黑土”</color>，\" +\r\n                                             \"不可长期的置于荫蔽处，以免枝叶徒长，花开稀少，花色暗淡\\n是否进入模拟系统\";\r\n                    }\r\n                    else\r\n                    {\r\n                        seedmangetext.text =\"《本草纲目》草部第十七卷有“凤仙……茎有红白二色，其大如指，中空而脆“，翩翩然“欲羽化而登仙”得名。\" +\r\n                                            \"“细看金凤小花丛，费尽司花染作工，雪色白边紫色袍，更饶深浅日般红。”说的就是凤仙花。\\n 已种植完成继续模拟\";\r\n                    }\r\n                   \r\n                    break;\r\n                \r\n                    \r\n            }\r\n        }\r\n        if (isGame2 == true)\r\n        {\r\n            Debug.Log(\"1\");\r\n            TipPanel.SetActive(true);\r\n            SeedPanel.SetActive(true);\r\n            nametext.text = Seedname;\r\n            Tipeedimage.sprite = Seedimage.sprite;\r\n            switch (gameObject.name)\r\n            {\r\n                \r\n                   \r\n                case \"车前子\":\r\n                    if (ThreeFaceMange.seedend2 == false)\r\n                    {\r\n                        seedmangetext.text =\r\n                            \"【车前草】 \\n  \\n车前草原产于热带地区，<color=#A52A2A>20℃及以上的温度</color>更适合它的生长，喜欢生长在比较松软的<color=#A52A2A>“土壤”</color>中，它喜欢阳光充足的生长环境，除了<color=#A52A2A>夏季</color>都可以给它全天的日照。\" +\r\n                            \"<color=#A52A2A>结子注意在周围喷水进行保湿遮阳</color>\\n是否进入模拟系统。\";\r\n                    }\r\n                    else\r\n                    {\r\n                        seedmangetext.text = \" \\n《本草纲目》：王旻《山居录》，有种车前剪苗食法,则昔人常以为蔬矣。今野人犹采食之。故又名当道、牛遗、地衣、过路、胜马、车前突。\\n古诗中有写车前草的诗篇有写采采芣苢，薄言采之。采采芣苢薄言有之\\n 已种植完成继续模拟\";\r\n                    }\r\n\r\n                    break;\r\n                    \r\n            }\r\n            \r\n        }\r\n    }\r\n    //判断当前面是否全部完成全部种子种植\r\n    public void isgameover()\r\n    {\r\n        if (ThreeFaceMange.seedend1&&ThreeFaceMange.seedend2&&ThreeFaceMange.seedend3)\r\n        {\r\n           \r\n            ThreeFaceMange.Face3compement = true;\r\n            GameObject.Find(\"3/Panel/bg\").transform.Find(\"线索3\").gameObject.SetActive(true);\r\n            Debug.Log(\"第三面通关\"+ThreeFaceMange.Face3compement);\r\n            UIFaceManager.Instance.MessageonCtrol(\"第三面通关\");\r\n        }\r\n        else\r\n        {\r\n            Debug.Log(\"一个成功\");\r\n        }\r\n    }\r\n//选择种植种子条件\r\n    private void seedButtonclik(Button sender)\r\n    {\r\n        switch (sender.name)\r\n        {\r\n            case \"确定\":\r\n\r\n            \r\n            {   SeedPlathPanel.SetActive(true);\r\n                nametext1.text = nametext.text;\r\n                Tipeedimage1.sprite = Tipeedimage.sprite;\r\n                SeedPanel.SetActive(false);\r\n                       \r\n            }\r\n                break;\r\n            case \"返回\":\r\n\r\n            {//关闭信息面板\r\n                SeedPanel.SetActive(false);\r\n                TipPanel.SetActive(false);\r\n            }\r\n                break;\r\n            case \"确定返回\":\r\n\r\n            {\r\n                //关闭信息面板\r\n                SeedPanel.SetActive(true);\r\n                SeedendPanel.SetActive(false);\r\n            }\r\n                break;\r\n            case \"开始\":\r\n            {//开始播放植物动画并检测最终结果\r\n\r\n                Debug.Log(\"开始\");\r\n               \r\n                  \r\n                   \r\n                    if (UIConter.Landidex == 0&& UIConter.Seasonidex==0&& UIConter.temidex==0&& UIConter.sunidex==0)\r\n                    {\r\n                        \r\n                        UIFaceManager.Instance.MessageonCtrol(\"未设置模拟失败\");\r\n                        SeedPlathPanel.SetActive(false);\r\n                        SeedendPanel.SetActive(true);\r\n                        nametext2.text = Seedname;\r\n                        Tipeedimage2.sprite = Seedimage.sprite;\r\n                        seedmangetext2.text = \"<color=#FF0000>模拟失败!条件未设置\\n 是否继续模拟</color> \\n 返回信息面板阅读信息继续模拟\";\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        if (UIConter.Landidex == 4&& UIConter.Seasonidex==4&& UIConter.temidex==4&& UIConter.sunidex==4)\r\n                        {\r\n                            Debug.Log(\"甘菊失败\");\r\n                            SeedPlathPanel.SetActive(false);\r\n                            SeedendPanel.SetActive(true);\r\n                            nametext2.text = Seedname;\r\n                            Tipeedimage2.sprite = Seedimage.sprite;\r\n                            seedmangetext2.text = \"<color=#FF0000>模拟失败!条件选择不正确\\n 是否继续模拟</color> \\n 返回信息面板阅读信息继续模拟\";\r\n                        }\r\n                        else\r\n                        {\r\n                            if (UIConter.Landidex == 5&& UIConter.Seasonidex==5&& UIConter.temidex==5&& UIConter.sunidex==5)\r\n                            {\r\n                                Debug.Log(\"凤仙花失败\");\r\n                                SeedPlathPanel.SetActive(false);\r\n                                SeedendPanel.SetActive(true);\r\n                                nametext2.text = Seedname;\r\n                                Tipeedimage2.sprite = Seedimage.sprite;\r\n                                seedmangetext2.text = \"<color=#FF0000>模拟失败!条件选择不正确\\n 是否继续模拟</color> \\n 返回信息面板阅读信息继续模拟\";\r\n                            }\r\n                            else\r\n                            {\r\n                                if (UIConter.Landidex == 6&& UIConter.Seasonidex==6&& UIConter.temidex==6&& UIConter.sunidex==6||UIConter.Landidex == 0&& UIConter.Seasonidex==6&& UIConter.temidex==6&& UIConter.sunidex==0)\r\n                                {\r\n                                    Debug.Log(\"车前子失败\");\r\n                                    SeedPlathPanel.SetActive(false);\r\n                                    SeedendPanel.SetActive(true);\r\n                                    nametext2.text = Seedname;\r\n                                    Tipeedimage2.sprite = Seedimage.sprite;\r\n                                    seedmangetext2.text = \"<color=#FF0000>模拟失败!条件选择不正确\\n 是否继续模拟</color> \\n 返回信息面板阅读信息继续模拟\";\r\n                                }\r\n                                else\r\n                                {\r\n                                    if (UIConter.Landidex == 1&& UIConter.Seasonidex==1&& UIConter.temidex==1&& UIConter.sunidex==1)\r\n                                    {\r\n                                        Debug.Log(\"甘菊成功\");\r\n                                        UIFaceManager.Instance.MessageonCtrol(\"甘菊模拟种植开始\");\r\n                                        SeedPlathPanel.SetActive(false);\r\n                                        TipPanel.SetActive(false);\r\n                                        seedmanger.gameObject.SetActive(false);\r\n                                        SeedendPanel.gameObject.SetActive(false);\r\n                                        video_img.SetActive(true);\r\n\r\n                                       \r\n                                        ThreeFaceMange.seedend1 = true;\r\n                                        isgameover();\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        if (UIConter.Landidex == 2&& UIConter.Seasonidex==2&& UIConter.temidex==2&& UIConter.sunidex==2)\r\n                                        {\r\n                                            Debug.Log(\"凤仙花已成功\");\r\n                                            UIFaceManager.Instance.MessageonCtrol(\"凤仙花模拟种植开始\");\r\n                                            SeedPlathPanel.SetActive(false);\r\n                                            TipPanel.SetActive(false);\r\n                        \r\n                                            video_img.SetActive(true);\r\n                                            seedmanger.gameObject.SetActive(false);\r\n                                            ThreeFaceMange.seedend3 = true;\r\n                                            isgameover();\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            if (UIConter.Landidex == 3&& UIConter.Seasonidex==3&& UIConter.temidex==3&& UIConter.sunidex==3)\r\n                                            {\r\n                                                Debug.Log(\"车前草已成功\");\r\n                                                UIFaceManager.Instance.MessageonCtrol(\"车前子模拟种植开始\");\r\n                                                SeedPlathPanel.SetActive(false);\r\n                                                TipPanel.SetActive(false);\r\n                                                video_img.SetActive(true);\r\n                                                seedmanger.gameObject.SetActive(false); \r\n                                                ThreeFaceMange.seedend2 = true;\r\n                                                isgameover();\r\n                                            }\r\n                                            else\r\n                                            {\r\n                                                UIFaceManager.Instance.MessageonCtrol(\"\"+gameObject.name+\"模拟失败\");\r\n                        \r\n                                                SeedendPanel.SetActive(true);\r\n                                                nametext2.text = nametext1.text;\r\n                                                Tipeedimage2.sprite = Tipeedimage1.sprite;\r\n                                                SeedPlathPanel.SetActive(false);\r\n                                                seedmangetext2.text = \"<color=#FF0000>模拟失败!条件选择不正确\\n 是否继续模拟</color> \\n 返回信息面板阅读信息继续模拟\";\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                \r\n                    \r\n\r\n            }\r\n                break;\r\n            case \"取消\":\r\n\r\n            {//关闭信息面板\r\n                \r\n                SeedPlathPanel.SetActive(false);\r\n                TipPanel.SetActive(false);\r\n            }\r\n                break;\r\n            \r\n        }\r\n    }\r\n\r\n    #endregion\r\n   \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs	(date 1682332560655)
@@ -82,7 +82,6 @@
         //检测是否将各个种子找到
         if (collision.name == Seedname)
         {
-            Debug.Log("ss");
             gameObject.GetComponent<Image>().sprite =Updateimage;
             if (Seedname=="甘菊")
             {UIFaceManager.Instance.MessageonCtrol("甘菊已激活");
Index: .idea/.idea.Race/.idea/contentModel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ContentModelStore\">\r\n    <e p=\"C:\\Users\\沅\\AppData\\Local\\JetBrains\\Rider2020.3\\extResources\" t=\"IncludeRecursive\" />\r\n    <e p=\"C:\\Users\\沅\\AppData\\Local\\JetBrains\\Rider2020.3\\resharper-host\\Local\\Transient\\Rider\\v203\\SolutionCaches\\_Race.-1376956924.00\" t=\"ExcludeRecursive\" />\r\n    <e p=\"F:\\GIt\\Race\" t=\"IncludeRecursive\">\r\n      <e p=\"Assembly-CSharp-firstpass.csproj\" t=\"IncludeRecursive\" />\r\n      <e p=\"Assembly-CSharp.csproj\" t=\"IncludeRecursive\" />\r\n      <e p=\"Assets\" t=\"Include\">\r\n        <e p=\"Package\" t=\"Include\">\r\n          <e p=\"素材\" t=\"Include\">\r\n            <e p=\"_Heathen Engineering\" t=\"Include\">\r\n              <e p=\"Documentation\" t=\"Include\">\r\n                <e p=\"UX\" t=\"Include\">\r\n                  <e p=\"Flat Icons [Free]\" t=\"Include\">\r\n                    <e p=\"Read Me.txt\" t=\"Include\" />\r\n                  </e>\r\n                </e>\r\n              </e>\r\n              <e p=\"Samples\" t=\"Include\">\r\n                <e p=\"UX Examples\" t=\"Include\">\r\n                  <e p=\"Flat Icons [Free]\" t=\"Include\">\r\n                    <e p=\"ToggleSetAnimatorBoolean.cs\" t=\"Include\" />\r\n                  </e>\r\n                </e>\r\n              </e>\r\n            </e>\r\n            <e p=\"Sci-Fi UI\" t=\"Include\">\r\n              <e p=\"Demo_Assets\" t=\"Include\">\r\n                <e p=\"Scripts\" t=\"Include\">\r\n                  <e p=\"GUI_Demo.cs\" t=\"Include\" />\r\n                </e>\r\n              </e>\r\n            </e>\r\n          </e>\r\n        </e>\r\n        <e p=\"Plugins\" t=\"Include\">\r\n          <e p=\"Demigiant\" t=\"Include\">\r\n            <e p=\"DOTween\" t=\"Include\">\r\n              <e p=\"Modules\" t=\"Include\">\r\n                <e p=\"DOTweenModuleAudio.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModuleEPOOutline.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModulePhysics.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModulePhysics2D.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModuleSprite.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModuleUI.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModuleUnityVersion.cs\" t=\"Include\" />\r\n                <e p=\"DOTweenModuleUtils.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"Readme.txt\" t=\"Include\" />\r\n            </e>\r\n          </e>\r\n        </e>\r\n        <e p=\"Scripts\" t=\"Include\">\r\n          <e p=\"ControllerFile\" t=\"Include\">\r\n            <e p=\"CameraController.cs\" t=\"Include\" />\r\n            <e p=\"ViewController.cs\" t=\"Include\" />\r\n          </e>\r\n          <e p=\"ManagerFile\" t=\"Include\">\r\n            <e p=\"AudioManager\" t=\"Include\">\r\n              <e p=\"AudioManager.cs\" t=\"Include\" />\r\n              <e p=\"ObjectPool.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"FaceConcrete\" t=\"Include\">\r\n              <e p=\"FourFace\" t=\"Include\">\r\n                <e p=\"ButtenMana.cs\" t=\"Include\" />\r\n                <e p=\"ChangeButton.cs\" t=\"Include\" />\r\n                <e p=\"FourFaceMange.cs\" t=\"Include\" />\r\n                <e p=\"SliderConter.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"OneFace\" t=\"Include\">\r\n                <e p=\"OneFaceManager.cs\" t=\"Include\" />\r\n                <e p=\"Puzzle.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"ThreeFace\" t=\"Include\">\r\n                <e p=\"Flow.cs\" t=\"Include\" />\r\n                <e p=\"LandChange.cs\" t=\"Include\" />\r\n                <e p=\"rotateConter.cs\" t=\"Include\" />\r\n                <e p=\"SeedContel.cs\" t=\"Include\" />\r\n                <e p=\"ThreeFaceManager\" t=\"Include\">\r\n                  <e p=\"ThreeFaceMange.cs\" t=\"Include\" />\r\n                </e>\r\n                <e p=\"UIConter.cs\" t=\"Include\" />\r\n                <e p=\"VoidConter.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"TwoFace\" t=\"Include\">\r\n                <e p=\"Tools\" t=\"Include\">\r\n                  <e p=\"AnswerManager.cs\" t=\"Include\" />\r\n                  <e p=\"InFaceRotation.cs\" t=\"Include\" />\r\n                  <e p=\"TowFaceViscera.cs\" t=\"Include\" />\r\n                </e>\r\n                <e p=\"TwoFaceManager\" t=\"Include\">\r\n                  <e p=\"Base\" t=\"Include\">\r\n                    <e p=\"Viscera.cs\" t=\"Include\" />\r\n                  </e>\r\n                  <e p=\"TwoFaceManager.cs\" t=\"Include\" />\r\n                </e>\r\n              </e>\r\n            </e>\r\n            <e p=\"InventoryManager\" t=\"Include\">\r\n              <e p=\"Scripts\" t=\"Include\">\r\n                <e p=\"Inventory.cs\" t=\"Include\" />\r\n                <e p=\"inventoryManger.cs\" t=\"Include\" />\r\n                <e p=\"isont.cs\" t=\"Include\" />\r\n                <e p=\"Item.cs\" t=\"Include\" />\r\n                <e p=\"itemOnword.cs\" t=\"Include\" />\r\n                <e p=\"Slot.cs\" t=\"Include\" />\r\n              </e>\r\n            </e>\r\n            <e p=\"SceneStateManager\" t=\"Include\">\r\n              <e p=\"Base\" t=\"Include\">\r\n                <e p=\"SceneState.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"Concrete\" t=\"Include\">\r\n                <e p=\"LoadScene.cs\" t=\"Include\" />\r\n                <e p=\"MainScene.cs\" t=\"Include\" />\r\n                <e p=\"StartScene.cs\" t=\"Include\" />\r\n              </e>\r\n              <e p=\"SceneStateController.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"Tools\" t=\"Include\">\r\n              <e p=\"GameOverManager.cs\" t=\"Include\" />\r\n              <e p=\"StartUIManager.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"UIDragManager\" t=\"Include\">\r\n              <e p=\"UIDrag.cs\" t=\"Include\" />\r\n              <e p=\"UIFace.cs\" t=\"Include\" />\r\n              <e p=\"UIFaceManager.cs\" t=\"Include\" />\r\n            </e>\r\n          </e>\r\n          <e p=\"Shader\" t=\"Include\">\r\n            <e p=\"properties.shader\" t=\"Include\" />\r\n          </e>\r\n          <e p=\"TestScript\" t=\"Include\">\r\n            <e p=\"musetool\" t=\"Include\">\r\n              <e p=\"ClickHandler.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"objectContorl\" t=\"Include\">\r\n              <e p=\"Cameracontor.cs\" t=\"Include\" />\r\n              <e p=\"ObjectbeBigOrSmall.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"StartPhotoBIGandsamll\" t=\"Include\">\r\n              <e p=\"UICoom.cs\" t=\"Include\" />\r\n              <e p=\"UISamll.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"StratUITIpPlanel\" t=\"Include\">\r\n              <e p=\"TextContorl.cs\" t=\"Include\" />\r\n            </e>\r\n            <e p=\"UI\" t=\"Include\">\r\n              <e p=\"TIPConterl.cs\" t=\"Include\" />\r\n              <e p=\"UIGradient.cs\" t=\"Include\" />\r\n            </e>\r\n          </e>\r\n          <e p=\"Tools\" t=\"Include\">\r\n            <e p=\"GameLoop.cs\" t=\"Include\" />\r\n          </e>\r\n        </e>\r\n        <e p=\"Tween\" t=\"Include\">\r\n          <e p=\"Demo\" t=\"Include\">\r\n            <e p=\"TweenDemo.cs\" t=\"Include\" />\r\n          </e>\r\n          <e p=\"Readme.txt\" t=\"Include\" />\r\n          <e p=\"Tween.cs\" t=\"Include\" />\r\n        </e>\r\n      </e>\r\n      <e p=\"obj\" t=\"ExcludeRecursive\" />\r\n      <e p=\"Packages\" t=\"ExcludeRecursive\" />\r\n      <e p=\"Race.sln\" t=\"IncludeFlat\" />\r\n      <e p=\"Temp\\bin\" t=\"ExcludeRecursive\" />\r\n    </e>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Race/.idea/contentModel.xml	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ .idea/.idea.Race/.idea/contentModel.xml	(date 1682332560669)
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ContentModelStore">
-    <e p="C:\Users\沅\AppData\Local\JetBrains\Rider2020.3\extResources" t="IncludeRecursive" />
-    <e p="C:\Users\沅\AppData\Local\JetBrains\Rider2020.3\resharper-host\Local\Transient\Rider\v203\SolutionCaches\_Race.-1376956924.00" t="ExcludeRecursive" />
-    <e p="F:\GIt\Race" t="IncludeRecursive">
+    <e p="C:\Users\29569\AppData\Local\JetBrains\Rider2020.2\extResources" t="IncludeRecursive" />
+    <e p="C:\Users\29569\AppData\Local\JetBrains\Rider2020.2\resharper-host\Local\Transient\Rider\v202\SolutionCaches\_Race.-1705523573.00" t="ExcludeRecursive" />
+    <e p="D:\Race\Race" t="IncludeRecursive">
       <e p="Assembly-CSharp-firstpass.csproj" t="IncludeRecursive" />
       <e p="Assembly-CSharp.csproj" t="IncludeRecursive" />
       <e p="Assets" t="Include">
Index: .idea/.idea.Race/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/.idea.Race/.idea/riderModule.iml\" filepath=\"$PROJECT_DIR$/.idea/.idea.Race/.idea/riderModule.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Race/.idea/modules.xml	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ .idea/.idea.Race/.idea/modules.xml	(date 1682332560674)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/.idea.Race/.idea/riderModule.iml" filepath="$PROJECT_DIR$/.idea/.idea.Race/.idea/riderModule.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/.idea.Race/riderModule.iml" filepath="$PROJECT_DIR$/.idea/.idea.Race/riderModule.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/.idea.Race/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3f681314-839d-4fc6-9491-50771a848bcb\" name=\"默认的\" comment=\"保存信息\" />\r\n    <list id=\"1f10c6f0-5c40-4f98-9d82-81194a17b6bb\" name=\"在进行更新之前于 2023-03-14 15:16 取消提交了变更 [默认的]\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"KEEP\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UICoom.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/GameOverManager.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ControllerFile/CameraController.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/EventSystem/EventData/PointerEventData.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/TestScript/UI/TIPConterl.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIFace.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Tests/Runtime/Canvas/CanvasGroupInheritedAlpha.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Image.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Scrollbar.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UISamll.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"mock://D:/learn/Unity/Race/Race/Assets/Scenes/Game1.unity\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/OneFaceManager.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/EventSystem/ExecuteEvents.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Button.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Library/PackageCache/com.unity.ide.rider@1.2.1/Rider/Editor/RiderScriptEditor.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"mock://D:/learn/Unity/Race/Race/Assets/Scenes/Game1.unity\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"IdeDocumentHistory\">\r\n    <changedPaths>\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ControllerFile/ViewController.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIFaceManager.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/Base/Viscera.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIDrag.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/GameOverManager.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/OneFaceManager.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/InventoryManager/Scripts/inventoryManger.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/Tools/GameLoop.cs\" />\r\n      <option value=\"$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/StartUIManager.cs\" />\r\n    </changedPaths>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MtwgT4VxzpKxCEnieV90nTAnOq\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"新增\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"Discover.Launch.Via.Unity\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"configurable.group.appearance\" />\r\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Attach to Unity Editor.Attach to Unity Editor\">\r\n    <configuration name=\"Attach to Unity Editor &amp; Play\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"UNITY_ATTACH_AND_PLAY\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"selectedOptions\">\r\n        <set />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Attach to Unity Editor\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"Unity Debug\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"selectedOptions\">\r\n        <set />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"3f681314-839d-4fc6-9491-50771a848bcb\" name=\"默认的\" comment=\"\" />\r\n      <created>1678600318931</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678600318931</updated>\r\n      <workItem from=\"1678600326038\" duration=\"1000\" />\r\n      <workItem from=\"1678600345539\" duration=\"1658000\" />\r\n      <workItem from=\"1678607953566\" duration=\"1357000\" />\r\n      <workItem from=\"1678686071972\" duration=\"3903000\" />\r\n      <workItem from=\"1678690540189\" duration=\"362000\" />\r\n      <workItem from=\"1678714212595\" duration=\"580000\" />\r\n      <workItem from=\"1678759511912\" duration=\"2809000\" />\r\n      <workItem from=\"1678859235380\" duration=\"7444000\" />\r\n      <workItem from=\"1678879626756\" duration=\"8890000\" />\r\n      <workItem from=\"1678968494226\" duration=\"3938000\" />\r\n      <workItem from=\"1679404028511\" duration=\"4770000\" />\r\n      <workItem from=\"1679564250327\" duration=\"10681000\" />\r\n      <workItem from=\"1679906248300\" duration=\"10486000\" />\r\n      <workItem from=\"1680173595675\" duration=\"7693000\" />\r\n      <workItem from=\"1680223141465\" duration=\"16224000\" />\r\n      <workItem from=\"1680505060215\" duration=\"1195000\" />\r\n      <workItem from=\"1680520785540\" duration=\"5891000\" />\r\n      <workItem from=\"1680602690588\" duration=\"11560000\" />\r\n      <workItem from=\"1680858739055\" duration=\"2954000\" />\r\n      <workItem from=\"1680935454130\" duration=\"1290000\" />\r\n      <workItem from=\"1681116257008\" duration=\"4004000\" />\r\n      <workItem from=\"1681137163178\" duration=\"133000\" />\r\n      <workItem from=\"1681191790592\" duration=\"15697000\" />\r\n      <workItem from=\"1682215881181\" duration=\"8010000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"第一次提交\">\r\n      <created>1678600451169</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678600451169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"第二次提交\">\r\n      <created>1678601114175</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678601114175</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"3\">\r\n      <created>1678608792655</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678608792655</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Start场景\">\r\n      <created>1678689674485</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678689674485</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Start场景\">\r\n      <created>1678689851651</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678689851651</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"场景切换\">\r\n      <created>1678787002788</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678787002788</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"场景切换\">\r\n      <created>1678787019833</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678787019833</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"场景切换\">\r\n      <created>1678787367864</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678787367864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"场景切换\">\r\n      <created>1678787426416</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678787426416</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"场景切换\">\r\n      <created>1678787841071</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678787841071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"保存信息\">\r\n      <created>1678859385606</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678859385606</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"基础1\">\r\n      <created>1679570752746</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679570752746</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"保存信息\">\r\n      <created>1679906510603</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679906510603</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"基础跨面旋转优化\">\r\n      <created>1680096093631</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680096093631</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"基础跨面旋转优化\">\r\n      <created>1680096098991</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680096098991</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"第二个面部分底层\">\r\n      <created>1680100711610</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680100711610</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"第二个面部分底层\">\r\n      <created>1680100885614</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680100885614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"4面\">\r\n      <created>1680184435337</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680184435337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"4面\">\r\n      <created>1680184929447</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680184929447</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"保存信息\">\r\n      <created>1680430095869</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680430095869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"第二面基础\">\r\n      <created>1680437314887</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680437314887</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"第二面完结\">\r\n      <created>1680438533030</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680438533030</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"第二面优化\">\r\n      <created>1680512088922</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680512088922</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"保存信息\">\r\n      <created>1680692141775</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680692141775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"问题\">\r\n      <created>1681120111569</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681120111569</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"第二面优化完成！！！！！！！！！\">\r\n      <created>1681137207526</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681137207526</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"第二面基础功能实现\">\r\n      <created>1681205263566</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681205263566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"第二面基础功能实现\">\r\n      <created>1681217274579</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681217274579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"第二面基础功能实现\">\r\n      <created>1681217371760</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681217371760</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"换了个盒子\">\r\n      <created>1681221306755</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681221306755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"换了个盒子\">\r\n      <created>1681221411522</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681221411522</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"保存信息\">\r\n      <created>1681717041368</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681717041368</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"第二面优化\">\r\n      <created>1681718054104</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681718054104</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"第二面优化\">\r\n      <created>1681718158391</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681718158391</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"保存信息\">\r\n      <created>1682217343896</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682217343896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"保存信息\">\r\n      <created>1682230632977</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682230632977</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"保存信息\">\r\n      <created>1682231161848</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682231161848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"完结\">\r\n      <created>1682257809855</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682257809855</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"39\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"true\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"EditMode\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"第一次提交\" />\r\n    <MESSAGE value=\"第二次提交\" />\r\n    <MESSAGE value=\"3\" />\r\n    <MESSAGE value=\"Start场景\" />\r\n    <MESSAGE value=\"场景切换\" />\r\n    <MESSAGE value=\"基础1\" />\r\n    <MESSAGE value=\"基础跨面旋转优化\" />\r\n    <MESSAGE value=\"第二个面部分底层\" />\r\n    <MESSAGE value=\"4面\" />\r\n    <MESSAGE value=\"第二面基础\" />\r\n    <MESSAGE value=\"第二面完结\" />\r\n    <MESSAGE value=\"问题\" />\r\n    <MESSAGE value=\"第二面优化完成！！！！！！！！！\" />\r\n    <MESSAGE value=\"第二面基础功能实现\" />\r\n    <MESSAGE value=\"换了个盒子\" />\r\n    <MESSAGE value=\"第二面优化\" />\r\n    <MESSAGE value=\"保存信息\" />\r\n    <MESSAGE value=\"完结\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"完结\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Race/.idea/workspace.xml	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ .idea/.idea.Race/.idea/workspace.xml	(date 1682332602012)
@@ -19,7 +19,20 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="3f681314-839d-4fc6-9491-50771a848bcb" name="默认的" comment="保存信息" />
+    <list default="true" id="3f681314-839d-4fc6-9491-50771a848bcb" name="默认的" comment="1">
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Race/.idea/contentModel.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Race/.idea/contentModel.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Race/.idea/indexLayout.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Race/.idea/indexLayout.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Race/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Race/.idea/modules.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Race/riderModule.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Race/riderModule.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scenes/Game1.unity" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scenes/Game1.unity" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs" afterDir="false" />
+    </list>
     <list id="1f10c6f0-5c40-4f98-9d82-81194a17b6bb" name="在进行更新之前于 2023-03-14 15:16 取消提交了变更 [默认的]" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,50 +44,28 @@
     <option name="RESET_MODE" value="KEEP" />
   </component>
   <component name="HighlightingSettingsPerFile">
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UICoom.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/UI/TIPConterl.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UISamll.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Image.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/GameOverManager.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ControllerFile/CameraController.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/EventSystem/EventData/PointerEventData.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/UI/TIPConterl.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIFace.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Tests/Runtime/Canvas/CanvasGroupInheritedAlpha.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Image.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Scrollbar.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UISamll.cs" root0="FORCE_HIGHLIGHTING" />
-    <setting file="mock://D:/learn/Unity/Race/Race/Assets/Scenes/Game1.unity" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/OneFaceManager.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/EventSystem/EventData/PointerEventData.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ide.rider@1.2.1/Rider/Editor/RiderScriptEditor.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Button.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/EventSystem/ExecuteEvents.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/Button.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ide.rider@1.2.1/Rider/Editor/RiderScriptEditor.cs" root0="SKIP_HIGHLIGHTING" />
-    <setting file="mock://D:/learn/Unity/Race/Race/Assets/Scenes/Game1.unity" root0="SKIP_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/SeedContel.cs" root0="FORCE_HIGHLIGHTING" />
-  </component>
-  <component name="IdeDocumentHistory">
-    <changedPaths>
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/ThreeFace/Flow.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ControllerFile/ViewController.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIFaceManager.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/Base/Viscera.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIDrag.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/GameOverManager.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/AnswerManager.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/TowFaceViscera.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/Tools/InFaceRotation.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/TwoFace/TwoFaceManager/TwoFaceManager.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/OneFaceManager.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/FaceConcrete/OneFace/Puzzle.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/InventoryManager/Scripts/inventoryManger.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/Tools/GameLoop.cs" />
-      <option value="$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/StartUIManager.cs" />
-    </changedPaths>
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/UIDragManager/UIFace.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ControllerFile/CameraController.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/TestScript/StartPhotoBIGandsamll/UICoom.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Assets/Scripts/ManagerFile/Tools/GameOverManager.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.ugui@1.0.0/Tests/Runtime/Canvas/CanvasGroupInheritedAlpha.cs" root0="SKIP_HIGHLIGHTING" />
   </component>
   <component name="ProjectId" id="2MtwgT4VxzpKxCEnieV90nTAnOq" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
     <ConfirmationsSetting value="2" id="新增" />
   </component>
   <component name="ProjectViewState">
@@ -415,7 +406,14 @@
       <option name="project" value="LOCAL" />
       <updated>1682257809855</updated>
     </task>
-    <option name="localTasksCounter" value="39" />
+    <task id="LOCAL-00039" summary="1">
+      <created>1682332586605</created>
+      <option name="number" value="00039" />
+      <option name="presentableId" value="LOCAL-00039" />
+      <option name="project" value="LOCAL" />
+      <updated>1682332586605</updated>
+    </task>
+    <option name="localTasksCounter" value="40" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -455,7 +453,22 @@
     <MESSAGE value="第二面优化" />
     <MESSAGE value="保存信息" />
     <MESSAGE value="完结" />
-    <option name="LAST_COMMIT_MESSAGE" value="完结" />
+    <MESSAGE value="1" />
+    <option name="LAST_COMMIT_MESSAGE" value="1" />
+  </component>
+  <component name="WindowStateProjectService">
+    <state x="147" y="64" key="MergeDialog" timestamp="1682332565390">
+      <screen x="0" y="0" width="1536" height="816" />
+    </state>
+    <state x="147" y="64" key="MergeDialog/0.0.1536.816@0.0.1536.816" timestamp="1682332565390" />
+    <state x="361" y="141" key="Vcs.Push.Dialog.v2" timestamp="1682332589773">
+      <screen x="0" y="0" width="1536" height="816" />
+    </state>
+    <state x="361" y="141" key="Vcs.Push.Dialog.v2/0.0.1536.816@0.0.1536.816" timestamp="1682332589773" />
+    <state x="582" y="321" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1682332556033">
+      <screen x="0" y="0" width="1536" height="816" />
+    </state>
+    <state x="582" y="321" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1536.816@0.0.1536.816" timestamp="1682332556033" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: .idea/.idea.Race/riderModule.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"RIDER_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$/../..\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Race/riderModule.iml	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ .idea/.idea.Race/riderModule.iml	(date 1682332565396)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="RIDER_MODULE" version="4">
   <component name="NewModuleRootManager">
+    <content url="file://$USER_HOME$/AppData/Local/Unity/cache/packages/packages.unity.cn/com.unity.assetbundlebrowser@1.7.0" />
     <content url="file://$MODULE_DIR$/../.." />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
Index: Assets/Scenes/Game1.unity
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scenes/Game1.unity	(revision 70f5498aea2d6340086b3f84f2626a00356106d3)
+++ Assets/Scenes/Game1.unity	(date 1682332565468)
@@ -5361,7 +5361,7 @@
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 4
+  m_RootOrder: 3
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -7535,7 +7535,7 @@
   m_OnCullStateChanged:
     m_PersistentCalls:
       m_Calls: []
-  m_Sprite: {fileID: 21300000, guid: 1ac841a7e97f0a9419beae91b66ea8d4, type: 3}
+  m_Sprite: {fileID: 21300000, guid: 54d16fff0a010794ca9674d39960250b, type: 3}
   m_Type: 0
   m_PreserveAspect: 0
   m_FillCenter: 1
@@ -9583,7 +9583,7 @@
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 3
+  m_RootOrder: 2
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -10030,7 +10030,7 @@
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1595298964}
-  m_RootOrder: 2
+  m_RootOrder: 3
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -10944,7 +10944,7 @@
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 1
+  m_RootOrder: 0
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -11604,7 +11604,7 @@
   m_OnCullStateChanged:
     m_PersistentCalls:
       m_Calls: []
-  m_Sprite: {fileID: 21300000, guid: 244e7ff7454ea0d44abd9d8b209336b0, type: 3}
+  m_Sprite: {fileID: 21300000, guid: 1ac841a7e97f0a9419beae91b66ea8d4, type: 3}
   m_Type: 0
   m_PreserveAspect: 0
   m_FillCenter: 1
@@ -12345,7 +12345,7 @@
   - {fileID: 1717998178}
   - {fileID: 1252802284}
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 5
+  m_RootOrder: 4
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -14675,7 +14675,7 @@
   m_Icon: {fileID: 0}
   m_NavMeshLayer: 0
   m_StaticEditorFlags: 0
-  m_IsActive: 0
+  m_IsActive: 1
 --- !u!224 &977730381
 RectTransform:
   m_ObjectHideFlags: 0
@@ -17605,7 +17605,7 @@
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 2
+  m_RootOrder: 1
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -17955,7 +17955,7 @@
   m_Icon: {fileID: 0}
   m_NavMeshLayer: 0
   m_StaticEditorFlags: 0
-  m_IsActive: 0
+  m_IsActive: 1
 --- !u!224 &1266358212
 RectTransform:
   m_ObjectHideFlags: 0
@@ -20023,8 +20023,8 @@
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.25232393, y: 0.209}
   m_AnchorMax: {x: 0.25232393, y: 0.209}
-  m_AnchoredPosition: {x: 181.6, y: 165.61}
-  m_SizeDelta: {x: 427.08508, y: 406.87927}
+  m_AnchoredPosition: {x: 207, y: 181.1}
+  m_SizeDelta: {x: 307.4911, y: 292.94336}
   m_Pivot: {x: 0.5, y: 0.5}
 --- !u!114 &1442356391
 MonoBehaviour:
@@ -20419,11 +20419,11 @@
   m_PrefabAsset: {fileID: 0}
   m_GameObject: {fileID: 1454628390}
   m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
-  m_LocalPosition: {x: 0, y: 0, z: 100}
+  m_LocalPosition: {x: 0, y: 0, z: 0}
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1595298964}
-  m_RootOrder: 3
+  m_RootOrder: 2
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
@@ -22527,12 +22527,12 @@
   m_LocalPosition: {x: 0, y: 0, z: 0}
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children:
-  - {fileID: 1839692703}
   - {fileID: 772234704}
   - {fileID: 1222894784}
   - {fileID: 662941368}
   - {fileID: 379640530}
   - {fileID: 807038964}
+  - {fileID: 1839692703}
   m_Father: {fileID: 1776813411}
   m_RootOrder: 0
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
@@ -22981,8 +22981,8 @@
   m_Children:
   - {fileID: 1640132349}
   - {fileID: 158538510}
-  - {fileID: 717708380}
   - {fileID: 1454628391}
+  - {fileID: 717708380}
   m_Father: {fileID: 1893807714}
   m_RootOrder: 0
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
@@ -25589,11 +25589,11 @@
   m_PrefabAsset: {fileID: 0}
   m_GameObject: {fileID: 1839692702}
   m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
-  m_LocalPosition: {x: 0, y: 0, z: -0}
+  m_LocalPosition: {x: 0, y: 0, z: 0}
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 1575977132}
-  m_RootOrder: 0
+  m_RootOrder: 5
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
   m_AnchorMin: {x: 0.5, y: 0.5}
   m_AnchorMax: {x: 0.5, y: 0.5}
diff --git .idea/.idea.Race/.idea/shelf/_2023_4_23_19_48____.xml .idea/.idea.Race/.idea/shelf/_2023_4_23_19_48____.xml
diff --git .idea/.idea.Race/.idea/shelf/Update_2023_4_23_15_11____.xml .idea/.idea.Race/.idea/shelf/Update_2023_4_23_15_11____.xml
diff --git .idea/.idea.Race/.idea/shelf/Update_2023_4_23_17_01____.xml .idea/.idea.Race/.idea/shelf/Update_2023_4_23_17_01____.xml
